{{- /* gotype: github.com/entkit/entkit.Generator */ -}}

{{- define "src/index.tsx" -}}

{{- $.Extension.FileHeader | ER_replace "^" "//" }}

import React from "react";
import {createRoot} from "react-dom/client";
import App from "./app";

{{- $keycloakEnabled := and $.Extension.Auth.Enabled $.Extension.Auth.Keycloak.Enabled }}

{{- if $keycloakEnabled }}
import Keycloak from "keycloak-js";
import {ReactKeycloakProvider} from "@react-keycloak/web";
{{- end }}

declare global {
    interface Window {
        environment: Record<string, any>;
    }
}

fetch("/environment.json")
    .then((res) => res.json())
    .then((data) => {
        window.environment = data;
    })
    .then(()=>{
        {{ if $keycloakEnabled -}}
        const keycloak = new Keycloak(window.environment.auth.keycloak);
        {{ end -}}

        const container = document.getElementById("root") as HTMLElement;
        const root = createRoot(container);

        root.render(
            {{- if $keycloakEnabled }}
            <ReactKeycloakProvider
                {{ if not (empty $.Extension.Auth.Keycloak) -}}
                authClient={keycloak}
                {{ end -}}
            >
                {{- end }}
                <React.StrictMode>
                    <App/>
                </React.StrictMode>
                {{- if $keycloakEnabled }}
            </ReactKeycloakProvider>
            {{- end }}
        );
    })

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
import { ReportHandler } from "web-vitals";

const reportWebVitals = (onPerfEntry?: ReportHandler) => {
    if (onPerfEntry && onPerfEntry instanceof Function) {
        import("web-vitals").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
            getCLS(onPerfEntry);
            getFID(onPerfEntry);
            getFCP(onPerfEntry);
            getLCP(onPerfEntry);
            getTTFB(onPerfEntry);
        });
    }
};
reportWebVitals();

{{- end -}}