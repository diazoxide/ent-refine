{{- /* gotype: github.com/diazoxide/ent-refine.RefineGen */ -}}
{{- define "list.tsx" -}}
/* eslint no-use-before-define: 0 */
import React, {useEffect, useState} from "react";
import {IResourceComponentsProps, HttpError, useDeleteMany} from "@pankod/refine-core";
import * as RA from "@pankod/refine-antd";
import * as Tables from "./tables";
import * as Interfaces from "./interfaces";

{{- range $n := $.Graph.Nodes }}
export type {{$n.Name}}ListProps = RA.ListProps & { tableProps?: Tables.{{$n.Name}}TableProps}
export const {{$n.Name}}List :React.FC<{{$n.Name}}ListProps> = ({tableProps, ...props} ) => {

    const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);
    const rowSelection = {selectedRowKeys, onChange: setSelectedRowKeys};
    const { mutate } = useDeleteMany<Interfaces.I{{$n.Name}}>();

    return <RA.List {...props} resource="{{$n.Name}}" headerButtons={({ defaultButtons }) => (
        <>
            {defaultButtons}
            {selectedRowKeys.length ?
                <RA.Popconfirm
                    key="delete"
                    okText="Delete all"
                    cancelText="Cancel"
                    okType="primary"
                    title="Are you sure?"
                    onConfirm={(): void => {
                        mutate({
                            resource: "{{$n.Name}}",
                            ids: selectedRowKeys,
                            mutationMode: "optimistic",
                        });
                    }}
                >
                    <RA.Button icon={<RA.Icons.DeleteOutlined />} type="primary" danger>Delete selected</RA.Button>
                </RA.Popconfirm>
                : null}
        </>
    )}>
        <Tables.{{$n.Name}}Table {...tableProps} rowSelection={rowSelection}/>
    </RA.List>
};

{{- end -}}
/* eslint no-use-before-define: 2 */
{{- end -}}
