{{- /* gotype: github.com/entkit/entkit.Generator */ -}}

{{- define "src/list.tsx" -}}

{{- $.Extension.FileHeader | ER_replace "^" "//" }}

{{- $prefix := $.Extension.Prefix }}

import React, {useState} from "react";
import * as RA from "@refinedev/antd";
import * as Tables from "./tables";
import * as Type from "./typedefs";
import * as Action from "./action";
{{- if $.Extension.Auth.Enabled }}
import { usePermissions } from "@refinedev/core";
{{- end }}

{{- range $n := $.Graph.Nodes }}
export type {{$n.Name}}ListProps = RA.ListProps & { tableProps?: Tables.{{$n.Name}}TableProps}
export const {{$n.Name}}List :React.FC<{{$n.Name}}ListProps> = ({tableProps, ...props} ) => {
    {{- if $.Extension.Auth.Enabled }}
    const { data: permissions } = usePermissions<Record<string, string[]>>();
    const can = Boolean(permissions?.{{$n.Name | pascal }}?.includes("{{"Read"}}"));
    {{- else }}
    const can = true;
    {{- end }}

    const [selectedRowKeys, setSelectedRowKeys] = useState<Type.{{ $prefix }}ID[]>([]);
    const rowSelection = {selectedRowKeys, onChange: setSelectedRowKeys};

    return can ? <RA.List {...props} resource="{{$n.Name | kebabcase}}" headerButtons={({ defaultButtons }) => (
        <>
            {{/*{defaultButtons}*/}}
            {{- range $a := $n.Annotations.ENTKIT.Actions }}
            {{- if $a.General }}
            {{- $aName:= ( print $n.Name "-" $a.Name "-Action") | pascal}}
            <Action.{{ $aName }} key="{{$aName}}" recordItemIDs={ selectedRowKeys }/>
            {{- end }}
            {{- end }}

            {selectedRowKeys.length ? <>
                {{- range $a := $n.Annotations.ENTKIT.Actions }}
                {{- if not (empty $a.Operation) }}
                {{- if and (not $a.General) $a.OnList $a.Operation.Bulk }}
                {{- $aName:= ( print $n.Name "-" $a.Name "-Action") | pascal}}
                <Action.{{ $aName }}
                    key="{{$aName}}"
                    recordItemIDs={ selectedRowKeys }
                    onSuccess={ ()=>setSelectedRowKeys([]) }
                />
                {{- end }}
                {{- end }}
                {{- end }}
            </> : null }
        </>
    )}>
        <Tables.{{$n.Name}}Table {...tableProps} rowSelection={rowSelection}/>
    </RA.List> : null
};

{{- end -}}
{{- end -}}
