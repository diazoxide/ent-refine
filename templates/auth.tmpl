{{- /* The line below tells Intellij/GoLand to enable the autocompletion based on the *gen.Graph type. */ -}}
{{- /* gotype: entgo.io/ent/entc/gen.Graph */ -}}
{{- define "entrefine-auth" -}}

{{ template "header" $ }}

import (
	"context"
	"errors"
	"fmt"
	"github.com/diazoxide/entrefine"
	"github.com/diazoxide/entrefine/common"
)

func AuthorizeByResource(ctx context.Context, resource string, scope string) error {
	resource = "{{$.Annotations.ENTREFINE.Prefix}}"+resource;
	scope = "{{$.Annotations.ENTREFINE.Prefix}}"+scope;
	authContext, err := AuthContextFromRequestContext(ctx)
	if err != nil {
		return err
	}
	auth := false
	for _, p := range authContext.Permissions {
		if p.Resource == resource {
			if common.Contains(p.Scopes, scope) {
				auth = true
				break
			}
		}
	}
	if !auth {
		return errors.New("access restricted for " + resource + " " + scope)
	}

	return nil
}

func AuthContextFromRequestContext(ctx context.Context) (*entrefine.Context, error) {
	val := ctx.Value(entrefine.AuthContextKey)
	if val == nil {
		err := fmt.Errorf("could not retrieve AuthContext")
		return nil, err
	}

	raw, ok := val.(*entrefine.Context)
	if !ok {
		return nil, fmt.Errorf("could not convert AuthContext")
	}
	return raw, nil
}

{{- end }}