// Copyright 2019-present Facebook
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by entc, DO NOT EDIT.

package ent

import (
	"context"
	"fmt"
	"net/http"

	"github.com/entkit/entkit"
	"github.com/gin-gonic/gin"
)

func EntkitAuthMiddleware(next http.Handler) http.Handler {
	return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		fmt.Println("Entkit: Authentication/Authorization is currently disabled. To utilize EntkitAuthMiddleware, please enable this feature.")
		next.ServeHTTP(w, r)
	})
}

func EntkitAuthGinMiddleware() gin.HandlerFunc {
	return func(c *gin.Context) {
		fmt.Println("Entkit: Authentication/Authorization is currently disabled. To utilize EntkitAuthGinMiddleware, please enable this feature.")
		c.Next()
	}
}

func EntkitAuthorizeByResource(ctx context.Context, resource string, scope string) error {
	fmt.Println("Entkit: Authentication/Authorization is currently disabled. To utilize EntkitAuthorizeByResource, please enable this feature.")
	return nil
}

func EntkitAuthContextFromRequestContext(ctx context.Context) (*entkit.AuthContext, error) {
	fmt.Println("Entkit: Authentication/Authorization is currently disabled. To utilize EntkitAuthContextFromRequestContext, please enable this feature.")
	return nil, nil
}
