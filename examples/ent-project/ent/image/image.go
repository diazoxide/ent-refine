// Copyright 2019-present Facebook
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by entc, DO NOT EDIT.

package image

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the image type in the database.
	Label = "image"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldOriginalURL holds the string denoting the original_url field in the database.
	FieldOriginalURL = "original_url"
	// EdgeGalleryCompany holds the string denoting the gallery_company edge name in mutations.
	EdgeGalleryCompany = "gallery_company"
	// EdgeLogoCompany holds the string denoting the logo_company edge name in mutations.
	EdgeLogoCompany = "logo_company"
	// Table holds the table name of the image in the database.
	Table = "images"
	// GalleryCompanyTable is the table that holds the gallery_company relation/edge.
	GalleryCompanyTable = "images"
	// GalleryCompanyInverseTable is the table name for the Company entity.
	// It exists in this package in order to avoid circular dependency with the "company" package.
	GalleryCompanyInverseTable = "companies"
	// GalleryCompanyColumn is the table column denoting the gallery_company relation/edge.
	GalleryCompanyColumn = "company_gallery_images"
	// LogoCompanyTable is the table that holds the logo_company relation/edge.
	LogoCompanyTable = "images"
	// LogoCompanyInverseTable is the table name for the Company entity.
	// It exists in this package in order to avoid circular dependency with the "company" package.
	LogoCompanyInverseTable = "companies"
	// LogoCompanyColumn is the table column denoting the logo_company relation/edge.
	LogoCompanyColumn = "company_logo_image"
)

// Columns holds all SQL columns for image fields.
var Columns = []string{
	FieldID,
	FieldTitle,
	FieldOriginalURL,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "images"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"company_logo_image",
	"company_gallery_images",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// TitleValidator is a validator for the "title" field. It is called by the builders before save.
	TitleValidator func(string) error
	// OriginalURLValidator is a validator for the "original_url" field. It is called by the builders before save.
	OriginalURLValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
